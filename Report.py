from Identity import Identity
from User import User
import json
class Report:
	def __init__(self,tenancy_name):
		self.identity = Identity(tenancy_name)
		self.fingerprint=self.identity.fingerprint
		self.private_path = self.identity.key_file
		self.tenancy_id = self.identity.compartment_id
		self.admin_id = self.identity.admin_user_id
		self.report = dict()
		self.user = User()
		self.report["local"] = list()
		self.report["service"] = list()
		self.report["inValid"] = list()
		self.report["localWithoutMFA"] = list()
		self.report_local()
		self.report_service()
		self.report_invalid()
		self.local_without_MFA()
		self.export_json()


	def local_without_MFA(self):
		temp = self.identity.get_local_users()
		for t in temp:
			if(not self.user.is_user_mfa(self.private_path,self.tenancy_id,self.admin_id,t.id,self.fingerprint)):
				temp2 = {
					"name":  t.name,
					"user_id" : t.id
				}
				self.report["localWithoutMFA"].append(temp2)


	def report_local(self):
		temp = self.identity.get_local_users()
		for t in temp:
			temp2 = {
				"name": t.name,
				"user_id": t.id
			}
			self.report["local"].append(temp2)

	def report_service(self):
		temp = self.identity.get_service_users()
		for t in temp:
			temp2 = {
				"name": t.name,
				"user_id": t.id
			}
			self.report["service"].append(temp2)

	def report_invalid(self):
		temp = self.identity.get_invalid_users()
		for t in temp:
			temp2 = {
				"name": t.name,
				"user_id": t.id
			}
			self.report["inValid"].append(temp2)

	def export_json(self):
		with open('result.json','w') as fp:
			json.dump(self.report,fp,ensure_ascii=False,indent=2,sort_keys=True)
