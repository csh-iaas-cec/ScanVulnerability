# from Report import Report
# r1 = Report('orasenatdecaentegacpgut03')
# print(r1.report)

import json
from autonomous import Autonomous

new_words =["natdsepltfrmanalyticshrd1_IAD","natdsepltfrmanalyticshrd1_PHX","natdsepltfrmanalyticshrd1_FRA","natdsepltfrmanalyticshrd1_LHR",'orasenatdecaretlhealth01_IAD', 'orasenatdecaretlhealth01_PHX','orasenatdhubsred01_IAD', 'orasenatdhubsred01_FRA', 'orasenatdhubsred01_PHX', 'orasenatdhubsred01_LHR', 'orasenatdhubsblue02_IAD', 'orasenatdhubsblue02_PHX', 'orasenatdhubsblue02_LHR', 'orasenatdhubsblue02_FRA', 'orasenatdecaretlhealth01_LHR', 'orasenatdecaretlhealth01_FRA',  'orasenatdpublicsector02_IAD', 'orasenatdpltoci01_IAD', 'orasenatdpltoci02_IAD', 'orasenatdctocloudcorp01_IAD', 'orasenatdecaentegacpgut01_IAD', 'orasenatdecaentegacpgut02_IAD', 'orasenatdecaentegacpgut03_IAD', 'orasenatdecafsitelco01_IAD', 'orasenatdecanational01_IAD', 'orasenatdecanational02_IAD', 'orasenatdoracledigital01_IAD', 'orasenatdoracledigital02_IAD', 'orasenatdoracledigital03_IAD', 'orasenatdoracledigital04_IAD', 'orasenatdoracledigital05_IAD', 'orasenatdoracledigital06_IAD', 'orasenatdoracledigital07_IAD', 'orasenatdoracledigital08_IAD', 'orasenatdpltdevopsnetw01_IAD', 'orasenatdpltdevopsnetw02_IAD', 'orasenatdpltdevopsnetw03_IAD', 'orasenatdpltinfomgmt01_IAD', 'orasenatdpltinfomgmt02_IAD', 'orasenatdpltinfomgmt03_IAD', 'orasenatdpltintegration01_IAD', 'orasenatdpltintegration02_IAD', 'orasenatdpltintegration03_IAD', 'orasenatdpltoci03_IAD', 'orasenatdpltoci04_IAD', 'orasenatdpltsecitom05_IAD', 'orasenatdpublicsector01_IAD', 'orasenatdpublicsector04_IAD', 'orasenatdpublicsector05_IAD', 'orasenatdpublicsector06_IAD', 'orasenatdseexcellence01_IAD', 'orasenatdpublicsector02_PHX', 'orasenatdpltoci01_PHX', 'orasenatdpltoci02_PHX', 'orasenatdctocloudcorp01_PHX', 'orasenatdecaentegacpgut01_PHX', 'orasenatdecaentegacpgut02_PHX', 'orasenatdecaentegacpgut03_PHX', 'orasenatdecafsitelco01_PHX', 'orasenatdecanational01_PHX', 'orasenatdecanational02_PHX', 'orasenatdoracledigital01_PHX', 'orasenatdoracledigital02_PHX', 'orasenatdoracledigital03_PHX', 'orasenatdoracledigital04_PHX', 'orasenatdoracledigital05_PHX', 'orasenatdoracledigital06_PHX', 'orasenatdoracledigital07_PHX', 'orasenatdoracledigital08_PHX', 'orasenatdpltdevopsnetw01_PHX', 'orasenatdpltdevopsnetw02_PHX', 'orasenatdpltdevopsnetw03_PHX', 'orasenatdpltinfomgmt01_PHX', 'orasenatdpltinfomgmt02_PHX', 'orasenatdpltinfomgmt03_PHX', 'orasenatdpltintegration01_PHX', 'orasenatdpltintegration02_PHX', 'orasenatdpltintegration03_PHX', 'orasenatdpltoci03_PHX', 'orasenatdpltoci04_PHX', 'orasenatdpltsecitom05_PHX', 'orasenatdpublicsector01_PHX', 'orasenatdpublicsector04_PHX', 'orasenatdpublicsector05_PHX', 'orasenatdpublicsector06_PHX', 'orasenatdseexcellence01_PHX', 'orasenatdpublicsector02_LHR', 'orasenatdpltoci01_LHR', 'orasenatdpltoci02_LHR', 'orasenatdctocloudcorp01_LHR', 'orasenatdecaentegacpgut01_LHR', 'orasenatdecaentegacpgut02_LHR', 'orasenatdecaentegacpgut03_LHR', 'orasenatdecafsitelco01_LHR', 'orasenatdecanational01_LHR', 'orasenatdecanational02_LHR', 'orasenatdoracledigital01_LHR', 'orasenatdoracledigital02_LHR', 'orasenatdoracledigital03_LHR', 'orasenatdoracledigital04_LHR', 'orasenatdoracledigital05_LHR', 'orasenatdoracledigital06_LHR', 'orasenatdoracledigital07_LHR', 'orasenatdoracledigital08_LHR', 'orasenatdpltdevopsnetw01_LHR', 'orasenatdpltdevopsnetw02_LHR', 'orasenatdpltdevopsnetw03_LHR', 'orasenatdpltinfomgmt01_LHR', 'orasenatdpltinfomgmt02_LHR', 'orasenatdpltinfomgmt03_LHR', 'orasenatdpltintegration01_LHR', 'orasenatdpltintegration02_LHR', 'orasenatdpltintegration03_LHR', 'orasenatdpltoci03_LHR', 'orasenatdpltoci04_LHR', 'orasenatdpltsecitom05_LHR', 'orasenatdpublicsector01_LHR', 'orasenatdpublicsector04_LHR', 'orasenatdpublicsector05_LHR', 'orasenatdpublicsector06_LHR', 'orasenatdseexcellence01_LHR', 'orasenatdpublicsector02_FRA', 'orasenatdpltoci01_FRA', 'orasenatdpltoci02_FRA', 'orasenatdctocloudcorp01_FRA', 'orasenatdecaentegacpgut01_FRA', 'orasenatdecaentegacpgut02_FRA', 'orasenatdecaentegacpgut03_FRA', 'orasenatdecafsitelco01_FRA', 'orasenatdecanational01_FRA', 'orasenatdecanational02_FRA', 'orasenatdoracledigital01_FRA', 'orasenatdoracledigital02_FRA', 'orasenatdoracledigital03_FRA', 'orasenatdoracledigital04_FRA', 'orasenatdoracledigital05_FRA', 'orasenatdoracledigital06_FRA', 'orasenatdoracledigital07_FRA', 'orasenatdoracledigital08_FRA', 'orasenatdpltdevopsnetw01_FRA', 'orasenatdpltdevopsnetw02_FRA', 'orasenatdpltdevopsnetw03_FRA', 'orasenatdpltinfomgmt01_FRA', 'orasenatdpltinfomgmt02_FRA', 'orasenatdpltinfomgmt03_FRA', 'orasenatdpltintegration01_FRA', 'orasenatdpltintegration02_FRA', 'orasenatdpltintegration03_FRA', 'orasenatdpltoci03_FRA', 'orasenatdpltoci04_FRA', 'orasenatdpltsecitom05_FRA', 'orasenatdpublicsector01_FRA', 'orasenatdpublicsector04_FRA', 'orasenatdpublicsector05_FRA', 'orasenatdpublicsector06_FRA', 'orasenatdseexcellence01_FRA']
from openpyxl import Workbook
from openpyxl.worksheet.table import Table, TableStyleInfo
from openpyxl.styles import Font, PatternFill
from openpyxl.worksheet.write_only import WriteOnlyCell
print(len(new_words))
def as_text(value):
    if value is None:
        return ""
    return str(value)

# default Table style
style = TableStyleInfo(
    name="TableStyleLight9",
    showFirstColumn=False,
    showLastColumn=False,
    showRowStripes=True,
    showColumnStripes=False,
)
wb = Workbook()

# remove default "Sheet"
sheet = wb["Sheet"]
wb.remove(sheet)

import re


with open('C:\\Users\\kiraju\\Downloads\\all_region_config_bkp.txt') as f:
    passage = f.read()
#print(passage)
passage = passage.replace('[',"kishore")
passage = passage.replace(']',"Kishore")

words = re.findall(r"\bkishore\w*?Kishore\b",passage)

for i in range(0,len(words)):
	words[i]=words[i].replace('kishore','')
	words[i]=words[i].replace('Kishore','')

profile = wb.create_sheet("kishire")
profile.sheet_properties.tabColor = "267db3"

wwww = ["orasenatdctocloudcorp01_IAD"]

for t in wwww:
	first_col = list()
	print(t)
	try:
		a = Autonomous(t)
		print(a.list_all_databases())

		
		
		with open(t+'auto.json') as handle:
		    dictdump = json.loads(handle.read())
	
	
		try:
			first_col=list()
			for k,v in dictdump.items():
				#profile.append([k])
				for li in v:
					
					for kk in li:
						second_col = list()
						for c,cc in kk.items():
							for dd,ddd in cc.items():
								first_col.append(dd)
								second_col.append(ddd)
			profile.append([t])					
			profile.append(["compartment_id","cpu_core_count","data_storage_size_in_tbs","db_name",	"db_version","db_workload","id","lifecycle_details","lifecycle_state","time_created","used_data_storage_size_in_tbs"])
						
		except:
			print("Sdfsf")
		try:
			for k,v in dictdump.items():
				#profile.append([k])
				for li in v:
					for kk in li:
						second_col = list()
						for c,cc in kk.items():
							for dd,ddd in cc.items():
								first_col.append(dd)
								second_col.append(ddd)
						profile.append(second_col)
						profile.append([" "])
		except:
			print("Sdfsf")
	except:
		print("Not Authenticated")
wb.save("scan.xlsx")