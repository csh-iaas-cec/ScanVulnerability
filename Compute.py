import time
start_time = time.time()

import oci
from oci.config import from_file
from Identity import Identity
from multiprocessing import Process

class Compute:
    def __init__(self, tenancy_name):
        self.instances = list()
        self.vnic_attachments = list()
        self.vnics = list()
        self.active_vnic_attachments = list()
        self.identity = Identity(tenancy_name)
        self.config = self.identity.config
        self.compute_client = oci.core.ComputeClient(self.config)
        self.network_client = oci.core.VirtualNetworkClient(self.config)
        self.initialize()

    def initialize(self):
        # p1 = Process(target= self.list_all_vnic_attachments)
        # p1.start()
        # p2 = Process(target= self.list_all_instances)
        # p2.start()
        self.list_all_vnic_attachments()
        self.list_all_instances()
        self.list_all_vnics()
        self.get_active_vnic_attachments()

    def list_all_vnic_attachments(self):
        """ Lists all VNIC attachments which are attached """
        for compartment in self.identity.compartments:
            for vnic_attachment in oci.pagination.list_call_get_all_results(self.compute_client.list_vnic_attachments, compartment_id = compartment.id).data:
                if(vnic_attachment.lifecycle_state == "ATTACHED"):
                    self.vnic_attachments.append(vnic_attachment)
        for vnic_attachment in oci.pagination.list_call_get_all_results(self.compute_client.list_vnic_attachments, compartment_id = self.identity.compartment_id).data:
            if(vnic_attachment.lifecycle_state == "ATTACHED"):
                self.vnic_attachments.append(vnic_attachment)

    def list_all_instances(self):
        for compartment in self.identity.compartments:
            for instance in oci.pagination.list_call_get_all_results(self.compute_client.list_instances, compartment_id = compartment.id).data:
                self.instances.append(instance)
        for instance in oci.pagination.list_call_get_all_results(self.compute_client.list_instances, compartment_id = self.identity.compartment_id).data:
            self.instances.append(instance)

    def list_all_vnics(self):
        for vnic_attachment in self.vnic_attachments:
            self.vnics.append(self.network_client.get_vnic(vnic_attachment.vnic_id).data)

    def get_vnic(self, vnic_id):
        return [vnic for vnic in self.vnics if vnic.id == vnic_id][0]

    def get_active_vnic_attachments(self):
        for vnic_attachment in self.vnic_attachments:
            if self.get_vnic(vnic_attachment.vnic_id).is_primary:
                self.active_vnic_attachments.append(vnic_attachment)
                


    

    


if __name__ == "__main__":
    c = Compute("orasenatdhubsred01")
    
    print(len(c.instances))
    print(len(c.active_vnic_attachments))
    print("--- %s seconds ---" % (time.time() - start_time))

