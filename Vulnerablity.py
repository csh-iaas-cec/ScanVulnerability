
class Vulnerability:
    """Discovers vulnerability in security list
    based on the security list object given"""
    def __init__(self, security_list):
        self.security_list = security_list
        self.open_public_internet = list()
        self.open_protocol = list()
        self.open_port = list()
        self.initialize()

    def initialize(self):
        self.discover()

    def discover(self):
        for ingress_rules in self.security_list.ingress_security_rules:

            if ingress_rules.protocol == "all":
                self.open_protocol.append(ingress_rules)
            if not ingress_rules.tcp_options:
                if ingress_rules.protocol != "1":
                    self.open_port.append(ingress_rules)
            if ingress_rules.source == "0.0.0.0/0":
                if not ingress_rules.tcp_options:
                    self.open_public_internet.append(ingress_rules)
                else:
                    if not ingress_rules.tcp_options.destination_port_range:
                        self.open_public_internet.append(ingress_rules)
                    # if ingress_rules.tcp_options.destination_port_range.min == 80 and  ingress_rules.tcp_options.destination_port_range.max == 80:
                    #     self.open_port80.append(ingress_rules)
                    # if ingress_rules.tcp_options.destination_port_range.min == 7001 and  ingress_rules.tcp_options.destination_port_range.max == 7002:
                    #     self.open_port7001.append(ingress_rules)

