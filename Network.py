import oci
from Identity import Identity
from Vulnerablity import Vulnerability
class Network:
    def __init__(self, tenancy_name):
        self.identity = Identity(tenancy_name)
        self.config = self.identity.config
        self.network_client = oci.core.VirtualNetworkClient(self.config)
        self.compartments = self.identity.compartments
        self.vcns = list()
        self.subnets = list()
        self.security_lists = list()
        self.vulnerable_security_lists = list()
        self.initialize()

    def initialize(self):
        self.store_vcns()
        self.store_subnets()
        self.store_security_lists()
        self.get_vulnerable_security_lists()

    def list_vcns(self, compartment_id):
        """Make API calls and fetch VCNs from compartment"""
        return oci.pagination.list_call_get_all_results(self.network_client.list_vcns, compartment_id = compartment_id).data

    def store_vcns(self):
        """Store all VCNs from all compartment in vcns Network instance"""
        for compartment in self.compartments:
            for vcn in self.list_vcns(compartment.id):
                self.vcns.append(vcn)
        for vcn in self.list_vcns(self.identity.compartment_id):
            self.vcns.append(vcn)

    def get_vcn(self, vcn_id):
        """Get VCN details from vcn_id"""
        return [vcn for vcn in self.vcns if vcn.id == vcn_id][0]

    def get_vcns(self, compartment_id):
        """Get VCN details from compartment_id"""
        return [vcn for vcn in self.vcns if vcn.compartment_id == compartment_id]

    def list_subnets(self, compartment_id, vcn_id):
        """Make API calls and fetch Subnets from compartment and vcn"""
        return oci.pagination.list_call_get_all_results(
            self.network_client.list_subnets, compartment_id, vcn_id).data

    def store_subnets(self):
        """Store all subnets from all compartment and vcns in subnets Network instance"""
        for compartment in self.compartments:
            for vcn in self.list_vcns(compartment.id):
                for subnet in self.list_subnets(compartment.id, vcn.id):
                    self.subnets.append(subnet)
        for vcn in self.list_vcns(self.identity.compartment_id):
            for subnet in self.list_subnets(self.identity.compartment_id, vcn.id):
                self.subnets.append(subnet)

    def get_subnet(self, subnet_id):
        """Get Subnet details from subnet_id"""
        return [subnet for subnet in self.subnets if subnet.id == subnet_id][0]

    def get_subnets(self, compartment_id, vcn_id):
        """Get Subnets detail from compartment_id and vcn_id"""
        return [
            subnet
            for subnet in self.subnets
            if subnet.compartment_id == compartment_id and subnet.vcn_id == vcn_id
        ]

    def list_security_lists(self, compartment_id, vcn_id):
        """Make API calls and fetch security_lists from compartment and vcn"""
        return oci.pagination.list_call_get_all_results(
            self.network_client.list_security_lists, compartment_id, vcn_id).data

    def store_security_lists(self):
        """Store all security_lists from all compartment and vcns in security_lists Network instance"""
        for compartment in self.compartments:
            for vcn in self.list_vcns(compartment.id):
                for security_list in self.list_security_lists(compartment.id, vcn.id):
                    self.security_lists.append(security_list)
        for vcn in self.list_vcns(self.identity.compartment_id):
            for security_list in self.list_security_lists(self.identity.compartment_id, vcn.id):
                self.security_lists.append(security_list)

    def get_security_list(self, security_list_id):
        """Get security_list details from security_list_id"""
        return [security_list for security_list in self.security_lists if security_list.id == security_list_id][0]

    def get_security_lists(self, compartment_id, vcn_id):
        """Get security_lists detail from compartment_id and vcn_id"""
        return [
            security_list
            for security_list in self.security_lists
            if security_list.compartment_id == compartment_id and security_list.vcn_id == vcn_id
        ]

    def get_vulnerable_security_lists(self):
        for security_list in self.security_lists:
            vulnerable_sl = Vulnerability(security_list)
            self.vulnerable_security_lists.append(vulnerable_sl)